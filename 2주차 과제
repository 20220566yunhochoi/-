1. 리스트 연산
리스트는 가변 객체이므로 값을 변경할 수 있습니다. 리스트 연산에서는 주로 다음과 같은 작업을 할 수 있습니다:

덧셈 (+): 리스트 합치기

곱셈 (*): 리스트 반복

슬라이싱: 리스트의 일부분을 추출

예시 코드:
python
복사
# 리스트 덧셈
list1 = [1, 2, 3]
list2 = [4, 5, 6]
result = list1 + list2  # 리스트 합치기
print(result)  # 출력: [1, 2, 3, 4, 5, 6]

# 리스트 곱셈
list3 = [1, 2]
result2 = list3 * 3  # 리스트 반복
print(result2)  # 출력: [1, 2, 1, 2, 1, 2]

# 슬라이싱
result3 = result[1:4]  # 리스트의 1번 인덱스부터 3번 인덱스까지
print(result3)  # 출력: [2, 3, 4]


2. 튜플 연산
튜플은 불변 객체로, 값 변경이 불가능하지만 연산은 리스트와 비슷합니다.

덧셈 (+): 튜플 합치기

곱셈 (*): 튜플 반복

슬라이싱: 튜플의 일부분을 추출

예시 코드:
python
복사
# 튜플 덧셈
tuple1 = (1, 2, 3)
tuple2 = (4, 5, 6)
result = tuple1 + tuple2  # 튜플 합치기
print(result)  # 출력: (1, 2, 3, 4, 5, 6)

# 튜플 곱셈
tuple3 = (1, 2)
result2 = tuple3 * 3  # 튜플 반복
print(result2)  # 출력: (1, 2, 1, 2, 1, 2)

# 슬라이싱
result3 = result[1:4]  # 튜플의 1번 인덱스부터 3번 인덱스까지
print(result3)  # 출력: (2, 3, 4)


3. 딕셔너리 연산
딕셔너리는 키-값 쌍으로 이루어진 데이터 구조입니다. 주로 키를 통해 값에 접근하거나 수정하는 연산을 수행합니다.

키로 값 접근: dict[key]

키-값 쌍 추가: dict[key] = value

키 존재 여부 확인: key in dict

딕셔너리 합치기 (update): 두 딕셔너리 합치기

예시 코드:
python
복사
# 딕셔너리 생성
dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

# 키로 값 접근
print(dict1['a'])  # 출력: 1

# 키-값 쌍 추가
dict1['e'] = 5
print(dict1)  # 출력: {'a': 1, 'b': 2, 'e': 5}

# 키 존재 여부 확인
print('a' in dict1)  # 출력: True
print('z' in dict1)  # 출력: False

# 딕셔너리 합치기
dict1.update(dict2)  # dict2의 키-값 쌍을 dict1에 추가
print(dict1)  # 출력: {'a': 1, 'b': 2, 'e': 5, 'c': 3, 'd': 4}
